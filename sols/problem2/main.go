// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

package main

import "fmt"

// set 1 and 2 as the first 2 elements, set the result to be 2 which is even
// start an infinite loop
// get the next element, and add to the result if it is even
// if the next element is greater than the max, break
// move along the chain

func sol2(maximum int64) (result int64) {
	var f1 int64 = 1
	var f2 int64 = 2

	result = 2

	for {
		next := f1 + f2
		if next % 2 == 0 {
			result += next
		}
		if next >= maximum {
			break
		}
		f1, f2 = f2, next
	}
	return
}


func main() {
	fmt.Println(sol2(4000000))
}